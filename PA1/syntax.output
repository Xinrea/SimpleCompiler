Terminals which are not used

   SEM
   SRET


State 13 conflicts: 1 shift/reduce
State 22 conflicts: 1 shift/reduce
State 31 conflicts: 4 shift/reduce
State 34 conflicts: 4 shift/reduce


Grammar

    0 $accept: s $end

    1 s: stats

    2 stats: stat
    3      | stats stat

    4 stat: vardecl
    5     | fundecl
    6     | exp

    7 block: LB stats RB
    8      | LB RB

    9 vardecl: type ident
   10        | type ident AS exp

   11 fundecl: type ident LP paras RP block

   12 paras: /* empty */
   13      | vardecl
   14      | paras COM vardecl

   15 ident: IDENT

   16 type: TYPE

   17 exp: ident AS exp
   18    | ident LP calls RP
   19    | ident
   20    | term
   21    | exp operation exp
   22    | LP exp RP

   23 calls: /* empty */
   24      | exp
   25      | calls COM exp

   26 term: INT
   27     | FLOAT
   28     | BOOL
   29     | CHAR

   30 operation: ADD
   31          | SUB
   32          | MUL
   33          | DIV


Terminals, with rules where they appear

$end (0) 0
error (256)
CHAR (258) 29
IDENT (259) 15
TYPE (260) 16
INT (261) 26
BOOL (262) 28
FLOAT (263) 27
LB (264) 7 8
RB (265) 7 8
LP (266) 11 18 22
RP (267) 11 18 22
COM (268) 14 25
AS (269) 10 17
SEM (270)
SRET (271)
SUB (272) 31
ADD (273) 30
DIV (274) 33
MUL (275) 32


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
s (22)
    on left: 1, on right: 0
stats (23)
    on left: 2 3, on right: 1 3 7
stat (24)
    on left: 4 5 6, on right: 2 3
block (25)
    on left: 7 8, on right: 11
vardecl (26)
    on left: 9 10, on right: 4 13 14
fundecl (27)
    on left: 11, on right: 5
paras (28)
    on left: 12 13 14, on right: 11 14
ident (29)
    on left: 15, on right: 9 10 11 17 18 19
type (30)
    on left: 16, on right: 9 10 11
exp (31)
    on left: 17 18 19 20 21 22, on right: 6 10 17 21 22 24 25
calls (32)
    on left: 23 24 25, on right: 18 25
term (33)
    on left: 26 27 28 29, on right: 20
operation (34)
    on left: 30 31 32 33, on right: 21


state 0

    0 $accept: . s $end

    CHAR   shift, and go to state 1
    IDENT  shift, and go to state 2
    TYPE   shift, and go to state 3
    INT    shift, and go to state 4
    BOOL   shift, and go to state 5
    FLOAT  shift, and go to state 6
    LP     shift, and go to state 7

    s        go to state 8
    stats    go to state 9
    stat     go to state 10
    vardecl  go to state 11
    fundecl  go to state 12
    ident    go to state 13
    type     go to state 14
    exp      go to state 15
    term     go to state 16


state 1

   29 term: CHAR .

    $default  reduce using rule 29 (term)


state 2

   15 ident: IDENT .

    $default  reduce using rule 15 (ident)


state 3

   16 type: TYPE .

    $default  reduce using rule 16 (type)


state 4

   26 term: INT .

    $default  reduce using rule 26 (term)


state 5

   28 term: BOOL .

    $default  reduce using rule 28 (term)


state 6

   27 term: FLOAT .

    $default  reduce using rule 27 (term)


state 7

   22 exp: LP . exp RP

    CHAR   shift, and go to state 1
    IDENT  shift, and go to state 2
    INT    shift, and go to state 4
    BOOL   shift, and go to state 5
    FLOAT  shift, and go to state 6
    LP     shift, and go to state 7

    ident  go to state 13
    exp    go to state 17
    term   go to state 16


state 8

    0 $accept: s . $end

    $end  shift, and go to state 18


state 9

    1 s: stats .
    3 stats: stats . stat

    CHAR   shift, and go to state 1
    IDENT  shift, and go to state 2
    TYPE   shift, and go to state 3
    INT    shift, and go to state 4
    BOOL   shift, and go to state 5
    FLOAT  shift, and go to state 6
    LP     shift, and go to state 7

    $default  reduce using rule 1 (s)

    stat     go to state 19
    vardecl  go to state 11
    fundecl  go to state 12
    ident    go to state 13
    type     go to state 14
    exp      go to state 15
    term     go to state 16


state 10

    2 stats: stat .

    $default  reduce using rule 2 (stats)


state 11

    4 stat: vardecl .

    $default  reduce using rule 4 (stat)


state 12

    5 stat: fundecl .

    $default  reduce using rule 5 (stat)


state 13

   17 exp: ident . AS exp
   18    | ident . LP calls RP
   19    | ident .

    LP  shift, and go to state 20
    AS  shift, and go to state 21

    LP        [reduce using rule 19 (exp)]
    $default  reduce using rule 19 (exp)


state 14

    9 vardecl: type . ident
   10        | type . ident AS exp
   11 fundecl: type . ident LP paras RP block

    IDENT  shift, and go to state 2

    ident  go to state 22


state 15

    6 stat: exp .
   21 exp: exp . operation exp

    SUB  shift, and go to state 23
    ADD  shift, and go to state 24
    DIV  shift, and go to state 25
    MUL  shift, and go to state 26

    $default  reduce using rule 6 (stat)

    operation  go to state 27


state 16

   20 exp: term .

    $default  reduce using rule 20 (exp)


state 17

   21 exp: exp . operation exp
   22    | LP exp . RP

    RP   shift, and go to state 28
    SUB  shift, and go to state 23
    ADD  shift, and go to state 24
    DIV  shift, and go to state 25
    MUL  shift, and go to state 26

    operation  go to state 27


state 18

    0 $accept: s $end .

    $default  accept


state 19

    3 stats: stats stat .

    $default  reduce using rule 3 (stats)


state 20

   18 exp: ident LP . calls RP

    CHAR   shift, and go to state 1
    IDENT  shift, and go to state 2
    INT    shift, and go to state 4
    BOOL   shift, and go to state 5
    FLOAT  shift, and go to state 6
    LP     shift, and go to state 7

    $default  reduce using rule 23 (calls)

    ident  go to state 13
    exp    go to state 29
    calls  go to state 30
    term   go to state 16


state 21

   17 exp: ident AS . exp

    CHAR   shift, and go to state 1
    IDENT  shift, and go to state 2
    INT    shift, and go to state 4
    BOOL   shift, and go to state 5
    FLOAT  shift, and go to state 6
    LP     shift, and go to state 7

    ident  go to state 13
    exp    go to state 31
    term   go to state 16


state 22

    9 vardecl: type ident .
   10        | type ident . AS exp
   11 fundecl: type ident . LP paras RP block

    LP  shift, and go to state 32
    AS  shift, and go to state 33

    LP        [reduce using rule 9 (vardecl)]
    $default  reduce using rule 9 (vardecl)


state 23

   31 operation: SUB .

    $default  reduce using rule 31 (operation)


state 24

   30 operation: ADD .

    $default  reduce using rule 30 (operation)


state 25

   33 operation: DIV .

    $default  reduce using rule 33 (operation)


state 26

   32 operation: MUL .

    $default  reduce using rule 32 (operation)


state 27

   21 exp: exp operation . exp

    CHAR   shift, and go to state 1
    IDENT  shift, and go to state 2
    INT    shift, and go to state 4
    BOOL   shift, and go to state 5
    FLOAT  shift, and go to state 6
    LP     shift, and go to state 7

    ident  go to state 13
    exp    go to state 34
    term   go to state 16


state 28

   22 exp: LP exp RP .

    $default  reduce using rule 22 (exp)


state 29

   21 exp: exp . operation exp
   24 calls: exp .

    SUB  shift, and go to state 23
    ADD  shift, and go to state 24
    DIV  shift, and go to state 25
    MUL  shift, and go to state 26

    $default  reduce using rule 24 (calls)

    operation  go to state 27


state 30

   18 exp: ident LP calls . RP
   25 calls: calls . COM exp

    RP   shift, and go to state 35
    COM  shift, and go to state 36


state 31

   17 exp: ident AS exp .
   21    | exp . operation exp

    SUB  shift, and go to state 23
    ADD  shift, and go to state 24
    DIV  shift, and go to state 25
    MUL  shift, and go to state 26

    SUB       [reduce using rule 17 (exp)]
    ADD       [reduce using rule 17 (exp)]
    DIV       [reduce using rule 17 (exp)]
    MUL       [reduce using rule 17 (exp)]
    $default  reduce using rule 17 (exp)

    operation  go to state 27


state 32

   11 fundecl: type ident LP . paras RP block

    TYPE  shift, and go to state 3

    $default  reduce using rule 12 (paras)

    vardecl  go to state 37
    paras    go to state 38
    type     go to state 39


state 33

   10 vardecl: type ident AS . exp

    CHAR   shift, and go to state 1
    IDENT  shift, and go to state 2
    INT    shift, and go to state 4
    BOOL   shift, and go to state 5
    FLOAT  shift, and go to state 6
    LP     shift, and go to state 7

    ident  go to state 13
    exp    go to state 40
    term   go to state 16


state 34

   21 exp: exp . operation exp
   21    | exp operation exp .

    SUB  shift, and go to state 23
    ADD  shift, and go to state 24
    DIV  shift, and go to state 25
    MUL  shift, and go to state 26

    SUB       [reduce using rule 21 (exp)]
    ADD       [reduce using rule 21 (exp)]
    DIV       [reduce using rule 21 (exp)]
    MUL       [reduce using rule 21 (exp)]
    $default  reduce using rule 21 (exp)

    operation  go to state 27


state 35

   18 exp: ident LP calls RP .

    $default  reduce using rule 18 (exp)


state 36

   25 calls: calls COM . exp

    CHAR   shift, and go to state 1
    IDENT  shift, and go to state 2
    INT    shift, and go to state 4
    BOOL   shift, and go to state 5
    FLOAT  shift, and go to state 6
    LP     shift, and go to state 7

    ident  go to state 13
    exp    go to state 41
    term   go to state 16


state 37

   13 paras: vardecl .

    $default  reduce using rule 13 (paras)


state 38

   11 fundecl: type ident LP paras . RP block
   14 paras: paras . COM vardecl

    RP   shift, and go to state 42
    COM  shift, and go to state 43


state 39

    9 vardecl: type . ident
   10        | type . ident AS exp

    IDENT  shift, and go to state 2

    ident  go to state 44


state 40

   10 vardecl: type ident AS exp .
   21 exp: exp . operation exp

    SUB  shift, and go to state 23
    ADD  shift, and go to state 24
    DIV  shift, and go to state 25
    MUL  shift, and go to state 26

    $default  reduce using rule 10 (vardecl)

    operation  go to state 27


state 41

   21 exp: exp . operation exp
   25 calls: calls COM exp .

    SUB  shift, and go to state 23
    ADD  shift, and go to state 24
    DIV  shift, and go to state 25
    MUL  shift, and go to state 26

    $default  reduce using rule 25 (calls)

    operation  go to state 27


state 42

   11 fundecl: type ident LP paras RP . block

    LB  shift, and go to state 45

    block  go to state 46


state 43

   14 paras: paras COM . vardecl

    TYPE  shift, and go to state 3

    vardecl  go to state 47
    type     go to state 39


state 44

    9 vardecl: type ident .
   10        | type ident . AS exp

    AS  shift, and go to state 33

    $default  reduce using rule 9 (vardecl)


state 45

    7 block: LB . stats RB
    8      | LB . RB

    CHAR   shift, and go to state 1
    IDENT  shift, and go to state 2
    TYPE   shift, and go to state 3
    INT    shift, and go to state 4
    BOOL   shift, and go to state 5
    FLOAT  shift, and go to state 6
    RB     shift, and go to state 48
    LP     shift, and go to state 7

    stats    go to state 49
    stat     go to state 10
    vardecl  go to state 11
    fundecl  go to state 12
    ident    go to state 13
    type     go to state 14
    exp      go to state 15
    term     go to state 16


state 46

   11 fundecl: type ident LP paras RP block .

    $default  reduce using rule 11 (fundecl)


state 47

   14 paras: paras COM vardecl .

    $default  reduce using rule 14 (paras)


state 48

    8 block: LB RB .

    $default  reduce using rule 8 (block)


state 49

    3 stats: stats . stat
    7 block: LB stats . RB

    CHAR   shift, and go to state 1
    IDENT  shift, and go to state 2
    TYPE   shift, and go to state 3
    INT    shift, and go to state 4
    BOOL   shift, and go to state 5
    FLOAT  shift, and go to state 6
    RB     shift, and go to state 50
    LP     shift, and go to state 7

    stat     go to state 19
    vardecl  go to state 11
    fundecl  go to state 12
    ident    go to state 13
    type     go to state 14
    exp      go to state 15
    term     go to state 16


state 50

    7 block: LB stats RB .

    $default  reduce using rule 7 (block)
